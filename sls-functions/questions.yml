get_question:
  handler: src.functions.get_question_handler.handle
  memorySize: 256
  timeout: 30
  environment:
    QUESTIONS_TABLE: ${self:custom.questionsTable}
  events:
    - http:
        path: questions/{questionId}
        method: get
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cloudwatch:*
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: '*'
get_question_review:
  handler: src.functions.get_question_review_handler.handle
  memorySize: 256
  timeout: 30
  environment:
    QUESTIONS_TABLE: ${self:custom.questionsTable}
  events:
    - http:
        path: questions/{questionId}/review
        method: get
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cloudwatch:*
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: '*'
get_answer:
  handler: src.functions.get_answer_handler.handle
  memorySize: 256
  timeout: 30

  environment:
    ANSWERS_TABLE: ${self:custom.answersTable}
    QUESTIONS_TABLE: ${self:custom.questionsTable}
  events:
    - http:
        path: answers/{answerId}
        method: get
    - http:
        path: candidate/{candidateId}/answers/question/{questionId}
        method: get
    - http:
        path: candidate/{candidateId}/answers
        method: get
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cloudwatch:*
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: '*'